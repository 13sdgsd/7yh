
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
    Task.Run(async () =>
    {
        while (true)
        {
            await Task.Delay(5000);
            
            lock (_syncLock)
            {
                var dbCount = await _dbService.GetPendingCountAsync(_currentTaskId);
                var memCount = _downloadQueue.Count;
                
                if (Math.Abs(dbCount - memCount) > 100)
                {
                    GlobalData.log.Warn($"队列不同步！数据库：{dbCount}，内存：{memCount}");
                    await ReconcileQueuesAsync();
                }
